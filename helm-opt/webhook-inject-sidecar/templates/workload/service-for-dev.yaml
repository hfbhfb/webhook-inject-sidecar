{{- if .Values.debuginfo }}

# # 开发调试时映射到主机
# apiVersion: v1
# kind: Service
# metadata:
#   namespace: {{ template "webhook-inject-sidecar.namespace" . }}
#   name: {{ template "webhook-inject-sidecar.fullname" . }}-operator
# spec:
#   type: ClusterIP
#   ports:
#   # Port上的映射端口
#   - port: 443
#     targetPort: 443
#     name: https
#     protocol: TCP           # 访问Service的协议，支持TCP和UDP
#   selector:
#     app: {{ template "webhook-inject-sidecar.name" $ }}-workload

---


apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app:  {{ template "webhook-inject-sidecar.fullname" . }}-proxy
  name:  {{ template "webhook-inject-sidecar.fullname" . }}-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app:  {{ template "webhook-inject-sidecar.fullname" . }}-proxy
  template:
    metadata:
      labels:
        app:  {{ template "webhook-inject-sidecar.fullname" . }}-proxy
    spec:
      containers:
      - image: {{ .Values.debuginfo.img }}
        name:  {{ template "webhook-inject-sidecar.fullname" . }}-proxy
        resources:
          requests:
            cpu: 102m
            memory: 100Mi
          limits:
            cpu: 501m
            memory: 501Mi
        volumeMounts:
          - name: config-volume
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
      volumes:
        - name: config-volume
          configMap:
            name:  {{ template "webhook-inject-sidecar.fullname" . }}-proxy
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app:  {{ template "webhook-inject-sidecar.fullname" . }}-operator
  name:  {{ template "webhook-inject-sidecar.fullname" . }}-operator
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
  selector:
    app:  {{ template "webhook-inject-sidecar.fullname" . }}-proxy
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: {{ template "webhook-inject-sidecar.fullname" . }}-proxy
    app:  {{ template "webhook-inject-sidecar.fullname" . }}-proxy
  name:  {{ template "webhook-inject-sidecar.fullname" . }}-proxy
data:
  nginx.conf: |
    load_module /usr/lib64/nginx/modules/ngx_stream_module.so;
    worker_processes 1;
    worker_rlimit_nofile 8192;
    events {
        worker_connections 1024;
    }

    stream {
        upstream backend {
            server {{ .Values.debuginfo.pc }};
        }
        server {
            listen 443;
            proxy_pass backend;
        }
    }


{{- end }}
